name: "Schengen Slot Watcher"

on:
  schedule:
    - cron: "*/5 * * * *"
  workflow_dispatch:

jobs:
  watch_slots:
    runs-on: ubuntu-latest

    steps:
      # ─── 1. Checkout repository ─────────────────────────────────────────────
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: true

      # ─── 2. Set up Python ───────────────────────────────────────────────────
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      # ─── 3. Install Python dependencies ────────────────────────────────────
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      # ─── 4. Set up Node.js & Playwright ────────────────────────────────────
      - name: Install Node.js and Playwright
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install Playwright
        run: npm install playwright

      # ─── 5. Render the page with Playwright and save to rendered.html ──────
      - name: Render Schengen appointments HTML
        run: |
          node << 'EOF'
          const { chromium } = require('playwright');
          (async () => {
            const browser = await chromium.launch({ headless: true });
            const page = await browser.newPage();
            await page.goto(`https://schengenappointments.com/in/${process.env.CITY_SLUG}/${process.env.VISA_TYPE}`, { timeout: 60000 });
            // Wait until at least one <tr> appears in the table body.
            // Adjust selector if necessary (e.g. wait for a specific country row or a table id)
            await page.waitForSelector('tbody tr', { timeout: 60000 });
            // Dump the fully rendered HTML to a file:
            const html = await page.content();
            const fs = require('fs');
            fs.writeFileSync('rendered.html', html, 'utf-8');
            await browser.close();
          })();
          EOF
        env:
          CITY_SLUG: "dubai"
          VISA_TYPE: "tourism"

      # ─── 6. (Optional) Show first 20 lines of rendered.html for debugging ───
      - name: Debug: Show rendered HTML snippet
        if: always()
        run: |
          echo "----- BEGIN rendered.html (lines 1-40) -----"
          head -n 40 rendered.html
          echo "------ END rendered.html ------"

      # ─── 7. Run the slot checker script ───────────────────────────────────
      - name: Run Schengen slot checker
        env:
          CITY_SLUG:      "dubai"
          VISA_TYPE:      "tourism"
          TARGET_COUNTRY: "Luxembourg"
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID:        ${{ secrets.CHAT_ID }}
          STATE_FILE:     "last_state.json"
        run: |
          python check_schengen.py

      # ─── 8. Commit updated state.json if needed ───────────────────────────
      - name: Commit updated state.json if needed
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add last_state.json
          git diff --cached --quiet || git commit -m "Update last_state.json"
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
